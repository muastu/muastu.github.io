name: Pages

on:
  push:
    branches:
      - master  # default branch

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      discussions: write
      issues: write
      packages: write
      pages: write
      statuses: write

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # If your repository depends on submodule, please see: https://github.com/actions/checkout
          submodules: recursive
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 'v20.10.0'
      - name: Install Hexo-cli
        run: |
          npm install hexo-cli -g
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{runner.OS}}-${{hashFiles('**/package-lock.json')}}
          #          restore-keys: |
          # ${{ runner.OS }}-npm-cache
          #      - name: 安装主题
          #run: |
          #git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly
          #npm install hexo-renderer-pug hexo-renderer-stylus --save

      - name: 5. 安装依赖 # Install Dependencies 如果没有缓存或 插件有更新，则安装插件
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: | # **如果仓库里没有 package-lock.json，上传一下，npm ci 必须要有 package-lock.json**
          npm ci

      - name: 6. 生成静态文件 # Generate，其中hexo algolia为algolia搜索，hexo gulp为全站压缩，如果没安装则按需删除
        run: |
          hexo clean
          hexo generate
          export TZ='Asia/Shanghai'

      - name: 7. 部署到 github page # Deploy：github.io仓库中保存每次提交日志 其中clean-exclude为hexo-seo-autopush插件配置，如果没安装则按需删除
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUBTOKEN }}
          repository-name: muastu/muastu.github.io
          branch: master
          folder: public
          clean-exclude: |
            public/.github/
          commit-message: "${{ github.event.head_commit.message }} Updated By Github Actions"
      - name: Install Dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public
  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
